#!/bin/sh
# show rate data of top coins by $1-COLNUM, $2-ORDER/direction

COLNUM=${1:-3}
ORDER=${2:-"gain"}
SIG=$((34+$3))


case "$ORDER" in
    *"-d"*|*"g"*|*"u"*) UD='ðŸ”º' && AD='-d';;
    *"-a"*|*"l"*|*"d"*) UD='ðŸ”»' && AD='-a';;
    *) UD='ðŸ”º' && AD='-d';;
esac

case "$COLNUM" in
    1) PREFIX='C';;
    2) PREFIX='P';;
    3) PREFIX='24';;
    4) PREFIX='01';;
    5) PREFIX='M';;
    6) PREFIX='R';;
    *) echo "there is no such column with number:$COLNUM exit." && exit 1;;
esac

# common options for rate_flip & rate_sort
OPTS=("$AD" -c "$COLNUM" -n 10)
RFOPTS=(${OPTS[@]} -l --exclude "p,m" --bar --prefix "$UD""$PREFIX:")
fold="[+]rt($PREFIX)$UD"

notify() {
    DATA=$(rate_sort "${OPTS[@]}")
    notify-send -u low "$(basename "$0") $ORDER" "\n$DATA\n."
}

guess_file() {
    tmpd="${TMPDIR:-/tmp/}rate_flip"
    sopt=$(echo "${RFOPTS[@]}" | sed "s/^-/_/g; s/[ ][-]*/_/g; s/[']//g; s/_$//g; s/\///g; s/\\\//g;")
    file="$tmpd/rate_flip$sopt"
    if [ -f "$file" ]; then
        echo "$file"
    else
        # notify-send -u critical "ERROR $(basename $BASH_SOURCE)" "File not exist:\n$file\n."
        exit 1
    fi
}

fold_elem() {
    file=$(guess_file)
    last_line=$(tail -n 1 "$file")
    # toggle between fold/unfold
    if [ "$last_line" = "$fold" ]; then
        sed -i '$d' "$file" # remove last line
    else
        # write to end of a file
        echo "$fold" >> "$file"
    fi
}

PID="$(pidof dwmblocks)"
case $BLOCK_BUTTON in
    1) notify ;;
    2) fold_elem ; kill -$SIG "$PID" ;;
    3) notify-send "$(basename "$0")" "Show rate data for top coins ($ORDER)
- Left click to show rate_sort data
- MMB fold/unfold $fold $ORDER" ;;
    6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

file=$(guess_file)
last_line=$(tail -n 1 "$file")
if [ "$last_line" = "$fold" ]; then
    echo "$fold"
else
    rate_flip "${RFOPTS[@]}"
fi

