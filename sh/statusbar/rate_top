#!/bin/bash
# show rate data of top coins by $1-COLNUM, $2-ORDER/direction

SIG=$((34+$1))
COLNUM=${2:-4}
ORDER=${3:-"gain"}

bname=$(basename "$0")

case "$ORDER" in
    *"-d"*|*"g"*|*"u"*)
        if [ "$S2D" ]; then
            C="$(s2d -c green)"
            UD="^c${C}^^d^"
        else
            UD='🔺'
        fi
        AD='-d'
    ;;
    *"-a"*|*"l"*|*"d"*)
        if [ "$S2D" ]; then
            C="$(s2d -c red)"
            UD="^c${C}^^d^"
        else
            UD='🔻'
        fi
        AD='-a'
    ;;
    *)
        if [ "$S2D" ]; then
            C="$(s2d -c green)"
            UD="^c${C}^^d^"
        else
            UD='🔺'
        fi
        AD='-d'
    ;;
esac

case "$COLNUM" in
    1) PREFIX='R';;
    2) PREFIX='C';;
    3) PREFIX='P';;
    4) PREFIX='24';;
    5) PREFIX='01';;
    6) PREFIX='M';;
    *) echo "there is no such column with number:$COLNUM exit." && exit 1;;
esac

# common options for rate_flip & rate_sort
OPTS=("$AD" -c "$COLNUM" -n 10)
# shellcheck disable=SC2206 # (Double quote to prevent globbing and word splitting)
RFOPTS=(${OPTS[@]} -l --exclude "r,p,m" --bar --post --prefix "${UD}${PREFIX}:")
fold="[+]rt($PREFIX)$UD"

show_report() {
    DATA=$(rate_sort "${OPTS[@]}")
    notify-send -u low -t 0 "$bname $ORDER" "\n$DATA\n"
}

guess_file() {
    tmpd="${TMPDIR:-/tmp/}rate_flip"
    sopt=$(echo "${RFOPTS[@]}" | sed "s/^-/_/g; s/[ ][-]*/_/g; s/[']//g; s/_$//g; s/\///g; s/\\\//g;")
    file="$tmpd/rate_flip$sopt"
    if [ -f "$file" ]; then
        echo "$file"
    else
        exit 1
    fi
}

fold_elem() {
    file=$(guess_file)
    last_line=$(tail -n 1 "$file")
    # toggle between fold/unfold
    if [ "$last_line" = "$fold" ]; then
        sed -i '$d' "$file" # remove last line
    else
        # write to the end of the file
        echo "$fold" >> "$file"
    fi
    PID="$(pidof dwmblocks)"
    kill "-$SIG" "$PID" # refresh
}


case $BLOCK_BUTTON in
    1) show_report ;;
    2) fold_elem ;;
    3) notify-send "$bname" "Show rate data for top coins ($ORDER)
- Left click to show rate_sort data
- MMB fold/unfold $fold" ;;
    6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

file=$(guess_file)
last_line=$(tail -n 1 "$file")
if [ "$last_line" = "$fold" ]; then
    echo "$fold"
else
    rate_flip "${RFOPTS[@]}"
fi
