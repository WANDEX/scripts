#!/bin/sh

# Displays todays precipication chance (ðŸ’§) and daily low and high.
# Usually intended for the statusbar.

# hardcoded update signal, used to update dwmblocks
SIG=$((34+5))
fold="[+]wttr"

# if $1 or env variable doesn't exist - location by default is based on ip
LOCATION="${1:-"$LOC0"}"
weatherreport=$(curl -sf "https://wttr.in/$LOCATION")
file="$CSCRDIR/non_live_forecast"
last_line=$(tail -n 1 "$file")

main() {
    oneliner=$(curl -sf "https://wttr.in/$LOCATION?format="%c_%f_%P_%o"")
    # replace chars and split by \t
    sp=$(echo "$oneliner" | tr -d ' |\n' | sed "s/_/\t/g")
    # trim insufficient and make single variable each
    c=$(echo "$sp" | awk '{print $1}') # Weather condition
    f=$(echo "$sp" | awk '{print $2}' | tr -d '+|C') # Temperature (Feels Like)
    P=$(echo "$sp" | awk '{print $3}' | tr -d 'hPa' | sed 's/.$/k/') # pressure kPa
    o=$(echo "$sp" | awk '{print $4}') # Probability of Precipitation (0=empty?)
    result="$c$f$P$o"
    echo "$result" | tr -d '\n'
    # Some very particular and terse stream manipulation.
    # ðŸ’§todays the maximum probability of precipitation
    echo "$weatherreport" | sed '16q;d' | grep -wo "[0-9]*%" | sort -rn | sed "s/^/ðŸ’§/g;1q" | tr -d '\n'
    # temp daily low - high
    echo "$weatherreport" | sed '13q;d' | grep -o "m\\([-+]\\)*[0-9]\\+" | sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' | tr '\n|m' ' ' | awk '{print $1"-"$2"Â°"}'
}

write_to_file() {
    echo "$weatherreport" > "$file"
}

fold_elem() {
    # toggle between fold/unfold
    if [[ "$last_line" == "$fold" ]]; then
        sed -i '$d' "$file" # remove last line
    else
        # write to end of a file
        echo "$fold" >> "$file"
    fi
}

case $BLOCK_BUTTON in
    1) write_to_file && setsid -f "$TERMINAL" -e less -Srf "$file" ;;
    2) fold_elem ; kill -$SIG $(pidof dwmblocks) ;;
    3) notify-send "ðŸŒˆ Weather module" "\- Left click for full forecast.
- MMB fold/unfold $fold
ðŸ’§: Todays maximum probability of rain/snow
Daily low - Daily high" ;;
    6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

if [[ "$last_line" == "$fold" ]]; then
    echo "$fold"
else
    main
fi

