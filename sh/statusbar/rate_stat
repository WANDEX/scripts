#!/bin/bash
# show cryptocurrency price data via rate wrapper

fold="[+]rate"

# $1 is update signal, used to update dwmblocks
SIG=$((34+$1))
# $2 is a postfix after the LIST name
POSTFIX="${2:-"_0"}"
LIST="$CSCRDIR"'/rate/rate_stat_coin_list'"$POSTFIX"
[ -f "$LIST" ] && CAT=$(head -n 1 "$LIST")
# if file is empty use default list of coins
COIN_LIST="${CAT:-"BTC,ETH,BCH"}"

price() { rate -o "$COIN_LIST" -f "%c:%p"; }
ch24h() { rate -o "$COIN_LIST" -f "%c:%H" --Ec; }
mcap()  { rate -o "$COIN_LIST" -f "%c:%m"; }
fold()  { echo "$fold"; }

array=(price ch24h mcap)
file="$CSCRDIR"'/rate/rate_stat'"$POSTFIX"
current_element=$(tail -n 1 "$file")
[ -z "$current_element" ] && current_element="price"
new_elem="$current_element"

next_elem() {
    [ "$current_element" = "$fold" ] && new_elem="${array[0]}"
    for i in "${!array[@]}"; do
        # find index of current element
        if [ "$current_element" = "${array[i]}" ]; then
            # if there is no next element, get first
            if [ -z "${array[$i+1]}" ]; then
                new_elem="${array[0]}"
            else
                new_elem="${array[$i+1]}"
            fi
        fi
    done
    # write new element to file
    echo "$new_elem" > "$file"
}

prev_elem() {
    [ "$current_element" = "$fold" ] && new_elem="${array[0]}"
    for i in "${!array[@]}"; do
        # find index of current element
        if [ "$current_element" = "${array[i]}" ]; then
            # if there is no previous element, get last
            if [ -z "${array[$i-1]}" ]; then
                new_elem="${array[-1]}"
            else
                new_elem="${array[$i-1]}"
            fi
        fi
    done
    # write new element to file
    echo "$new_elem" > "$file"
}

fold_elem() {
    # toggle between fold/unfold
    linesnum=$(< "$file" wc -l)
    if [ "$linesnum" -gt 1 ]; then
        sed -i '2,$d' "$file" # remove from second to last line
    elif [ "$linesnum" -eq 0 ]; then
        echo "$new_elem" > "$file"
    else
        new_elem="$fold"
        # write new element to end of a file
        echo "$new_elem" >> "$file"
    fi
}

PID="$(pidof dwmblocks)"
case $BLOCK_BUTTON in
        1) kill -$SIG "$PID" ;;
        2) fold_elem ; kill -$SIG "$PID" ;;
        3) notify-send "ðŸ’°crypto rate status module" "\- Shows my rate wrapper output
- MMB fold/unfold $fold
- Scroll to change between outputs." ;;
        4) prev_elem ; kill -$SIG "$PID" ;;
        5) next_elem ; kill -$SIG "$PID" ;;
        6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# exec function based on substring
case "$new_elem" in
    "price") output=$(price) ;;
    "ch24h") output=$(ch24h) ;;
    "mcap")  output=$(mcap) ;;
    "$fold") output=$(fold) ;;
esac

# add profits to output after each coin with existing hist data
IFS=',' read -ra clarr <<< "$COIN_LIST"
for coin_name in "${clarr[@]}"; do
    pro="$(rate_prof "$coin_name")"
    if [ -n "$pro" ]; then
        # split into words (parts not separated by spaces)
        for words in $output; do
            case "$words" in
                *"$coin_name"*)
                    output="$(echo "$output" | sed "s/${words}/${words}\(${pro}\)/")"
                    ;;
            esac
        done
    fi
done

printf "%s" "$output"
