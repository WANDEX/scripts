#!/bin/sh
# get average crypto exchange rate for last ~5 min

# read into variable using 'Here Document' code block
read -d '' USAGE <<- EOF
Usage: $(basename $BASH_SOURCE) [OPTION...]
OPTIONS
    -a, --awkformat Format awk printf feature
    -c, --convert   Convert and get sum of currencies, separated by (+/-) each
    -e, --exchange  Change exchange currency (default: usd)
    -f, --format    Format of single line output:
        %r rank | %c coin | %p price | %H ch24h | %h ch01h | %m mcap | %s spark
    -n, --number    Number of currencies (default: 10)
    -o, --oneliner  Get multiple coins data separated via ',' as a delimiter
    -T, --text      Text only, no ANSI sequences
    -t, --test      Activate url preview test mode
    -h, --help      Display help
    -H, --help-full Display full help which obtained via curl
    --currencies    List of supported currencies with their full names
    --coins         List of supported cryptocurrencies with their full names
EXAMPLES
    $(basename $BASH_SOURCE) -e eur
    $(basename $BASH_SOURCE) -c 1BTC-10ETH+100LTC
    $(basename $BASH_SOURCE) -o btc,eth,bch -f "%c:%p[%H]"
EOF

get_opt() {
    # Parse and read OPTIONS command-line options
    SHORT=a:c:e:f:hHn:o:tT
    LONG=awkformat:,convert:,coins,currencies,exchange:,format:,help,help-full,number:,oneliner:,test,text
    OPTIONS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    # PLACE FOR OPTION DEFAULTS
    n=10
    exchange="usd"
    awkformat="%5.1f\n"
    format="%c: %p"
    eval set -- "$OPTIONS"
    while true; do
        case "$1" in
        -a|--awkformat)
            shift
            awkformat="$1"
            ;;
        -c|--convert)
            shift
            special="$1"
            ;;
        -e|--exchange)
            shift
            exchange="$1"
            ;;
        -f|--format)
            shift
            format="$1"
            ;;
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -H|--help-full)
            echo "$USAGE"
            echo "THE FOLLOWING IS OBTAINED USING CURL (EVERY TIME)"
            special=":help"
            ;;
        -n|--number)
            shift
            case $1 in
                0*)
                    printf "$1\n^ unsupported number! exit.\n"
                    exit 1
                    ;;
                ''|*[!0-9]*)
                    printf "$1\n^ IS NOT A NUMBER OF INT! exit.\n"
                    exit 1
                    ;;
                *) n=$1 ;;
            esac
            ;;
        -o|--oneliner)
            shift
            oneliner="$1"
            ;;
        -t|--test)
            test=1
            ;;
        -T|--text)
            T='T'
            ;;
        --coins)
            special=":coins"
            ;;
        --currencies)
            special=":currencies"
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done
}

get_opt "$@"

get_as_one_line_defaults() {
    n=1000 # to get n coins from table to parse
    T='T'  # text only, no ANSI sequences
}

get_as_one_line() {
    multiline="$1"
    IFS=',' read -ra array <<< "$oneliner"
    for name in "${array[@]}"; do
        foundline=$(echo "$multiline" | tail -n +13 | grep -Fiw "$name" | sed 's/â”‚ //g')
        rank=$(echo "$foundline" | awk '{print $1}')
        coin=$(echo "$foundline" | awk '{print $2}')
        price=$(echo "$foundline" | awk '{print $3}' | awk '{printf "'"$awkformat"'", $1}')
        ch24h=$(echo "$foundline" | awk '{print $4}')
        ch01h=$(echo "$foundline" | awk '{print $5}')
        mcap=$(echo "$foundline" | awk '{print $6}')
        spark=$(echo "$foundline" | awk '{print $7}')

        frmt="$format"
        [[ "$format" =~ "%r" ]] && frmt=$(echo "$frmt" | sed -E 's/%r/'"$rank"'/g')
        [[ "$format" =~ "%c" ]] && frmt=$(echo "$frmt" | sed -E 's/%c/'"$coin"'/g')
        [[ "$format" =~ "%p" ]] && frmt=$(echo "$frmt" | sed -E 's/%p/'"$price"'/g')
        [[ "$format" =~ "%H" ]] && frmt=$(echo "$frmt" | sed -E 's/%H/'"$ch24h"'/g')
        [[ "$format" =~ "%h" ]] && frmt=$(echo "$frmt" | sed -E 's/%h/'"$ch01h"'/g')
        [[ "$format" =~ "%m" ]] && frmt=$(echo "$frmt" | sed -E 's/%m/'"$mcap"'/g')
        [[ "$format" =~ "%s" ]] && frmt=$(echo "$frmt" | sed -E 's/%s/'"$spark"'/g')
        out+="$frmt "
    done
    echo "$out"
}

[[ $oneliner ]] && get_as_one_line_defaults
BASE='https://'"$exchange"'.rate.sx/'"$special"
FULL="$BASE?qF$T&n=$n"
[[ $test ]] && echo "$FULL" && exit 0

CURL=$(curl -sf "$FULL")

[[ $oneliner ]] && get_as_one_line "$CURL" || echo "$CURL"

