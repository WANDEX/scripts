#!/bin/sh
# shortcut - to edit last/previous or current week pomodoro file by default

case "$1" in
    -[0-9]*) file="$(date -d "$1" +'week-%V-%Y.txt')" ;; # (relative) example: -1week
    last|prev|l|p) file="$(date -d 'last week' +'week-%V-%Y.txt')" ;;
    c|cur|curr|current) file="$(date +'week-%V-%Y.txt')" ;;
    *) search_query="$1"; file="$(date +'week-%V-%Y.txt')" ;;
esac

PMDRD="${PMDRD:-"$HOME/Documents/Pomodoro"}"
fpath="$PMDRD/$file"

grep_day() { slice="$(grep -s "^$1" "$fpath")" ;}

grep_query() {
    if [ -n "$search_query" ]; then
        cd "$PMDRD" || exit 1
        files="$(find . -type f \( ! -iname "TODO*" \) | sort -V)"
        if [ "$grep_month" ]; then
            lmwfn="$(date -d "last month +1week" "+week-%V-%Y.txt")"
            files="$(echo "$files" | awk "/$lmwfn/{found=1} found")" # all lines after pattern incl.
        elif [ "$grep_year" ]; then
            lywfn="$(date -d "last year +1week" "+week-%V-%Y.txt")"
            files="$(echo "$files" | awk "/$lywfn/{found=1} found")" # all lines after pattern incl.
        fi
        files_in_one_line="$(echo "$files" | tr '\n' ' ')"
        # shellcheck disable=SC2086 # (Double quote to prevent globbing and word splitting)
        MEGACAT="$(cat $files_in_one_line)" # all files split by space
        slice="$(echo "$MEGACAT" | grep -s "$search_query")"
    fi
}

if [ -n "$2" ]; then
    case "$2" in
        # grep for today, yesterday and any day, week name
        -[0-9]*)            grep_day "$(date -d "$2" +%A)" ;; # (relative) example: -1day
        [Yy]ear)            grep_year=1   ;;
        [Mm]onth)           grep_month=1  ;;
        [iI][Ww]eek)        grep_iweek=1; slice="$(cat "$fpath")" ;; # for the full week by days individually
        [Ww]eek)            grep_week=1;  slice="$(cat "$fpath")" ;; # for the full week
        [Tt]oday|[Dd]ay)    grep_day "$(date +%A)" ;;
        [Yy]esterday)       grep_day "$(date --date=yesterday +%A)" ;;
        [Mm]|[Mm]onday)     grep_day "Monday"    ;;
        [Tt]|[Tt]uesday)    grep_day "Tuesday"   ;;
        [Ww]|[Ww]ednesday)  grep_day "Wednesday" ;;
        [Tt]h|[Tt]hursday)  grep_day "Thursday"  ;;
        [Ff]|[Ff]riday)     grep_day "Friday"    ;;
        [Ss]a|[Ss]aturday)  grep_day "Saturday"  ;;
        [Ss]u|[Ss]unday)    grep_day "Sunday"    ;;
        *) ;; # grep from overall history
    esac
    grep_query
fi

hm_to_sec() { date --date="$1" +%s ;} # convert time to seconds
sec_diff() { echo "$(($1-$2))" ;} # subtract and return difference in seconds
sec_to_hm() { date --date="@$1" -u +%R ;} # convert seconds to HH:MM

sec_to_hm_inf() {
    # convert seconds into hours that bigger than 24h
    time_hh_mm="$(date --date="@$1" -u +"%-H:%M")" # hours without leading zeroes -> to sum later
    time_days="$(date --date="@$1" -u +"%-j")"
    time_days="$(("$time_days-1"))" # subtract 1 (because always starts from 1)
    if [ "$time_days" != "0" ]; then # because -gt 0 less stable
        hours="$(("$time_days*24"))" # convert days to hours
        time_hh="$(echo "$time_hh_mm" | cut -d: -f1)" # hours
        time_mm="$(echo "$time_hh_mm" | cut -d: -f2)" # minutes
        hh_sum="$(("$hours+$time_hh"))"
        time_hh_inf="${hh_sum}:${time_mm}"
        echo "$time_hh_inf"
    else
        echo "$time_hh_mm"
    fi

}

total_time_spent() {
    # example usage: total_time_spent "01:00 00:01"
    # returns: sum in seconds
    EPOCH='jan 1 1970'; sum=0
    for i in $1; do # 1 specifically without double quotes!
      sum="$(date -u -d "$EPOCH $i" +%s) + $sum"
    done
    echo "$sum" | bc
}

total_slice() {
    [ -z "$1" ] && return # simply return from function
    # returns: total time spent for slice $1 in 24h HH:MM
    spent_oneline="$(echo "$1" | awk '{print $3}' | tr '\n' ' ')"
    sec_total="$(total_time_spent "$spent_oneline")"
    sec_to_hm "$sec_total"
}

case "$3" in
    calc)
        hm="[[:digit:]][[:digit:]]:[[:digit:]][[:digit:]]"
        sep=" . " # sed regex for matching separator between (HH:MM . HH:MM)
        dgrep="$(echo "$slice" | grep -s -o "${hm}.*${hm}")"
        old_sep="$(echo "$dgrep" | head -n1 | sed "s/.*\($sep\).*/\1/")"
        hm_pairs="$(echo "$dgrep" | sed "s/$sep/-/")"
        for line in $hm_pairs; do
            hm_fr="$(echo "$line" | cut -d- -f1)"
            hm_to="$(echo "$line" | cut -d- -f2)"
            sec_fr="$(hm_to_sec "$hm_fr")"
            sec_to="$(hm_to_sec "$hm_to")"
            seconds="$(sec_diff "$sec_to" "$sec_fr")"
            new="$(sec_to_hm "$seconds")"
            # replace the original time interval with the new calculated time spent
            slice="$(echo "$slice" | sed "s/${hm_fr}${old_sep}${hm_to}/$new/")"
        done
    ;;
    '') # if $3 empty, but $2 not
        if [ -n "$2" ]; then
            echo "$slice"
            exit 0
        fi
    ;;
esac

total_week() {
    s_mon="$(echo "$slice" | grep -s "^Monday")"
    s_tue="$(echo "$slice" | grep -s "^Tuesday")"
    s_wed="$(echo "$slice" | grep -s "^Wednesday")"
    s_thu="$(echo "$slice" | grep -s "^Thursday")"
    s_fri="$(echo "$slice" | grep -s "^Friday")"
    s_sat="$(echo "$slice" | grep -s "^Saturday")"
    s_sun="$(echo "$slice" | grep -s "^Sunday")"
    # calculate total time spent for each day of week individually
    t_mon="$(total_slice "$s_mon")"
    t_tue="$(total_slice "$s_tue")"
    t_wed="$(total_slice "$s_wed")"
    t_thu="$(total_slice "$s_thu")"
    t_fri="$(total_slice "$s_fri")"
    t_sat="$(total_slice "$s_sat")"
    t_sun="$(total_slice "$s_sun")"
    if [ "$grep_iweek" ]; then
        # print individual totals for each day of week
        [ -n "$t_mon" ] && echo "mon: $t_mon"
        [ -n "$t_tue" ] && echo "tue: $t_tue"
        [ -n "$t_wed" ] && echo "wed: $t_wed"
        [ -n "$t_thu" ] && echo "thu: $t_thu"
        [ -n "$t_fri" ] && echo "fri: $t_fri"
        [ -n "$t_sat" ] && echo "sat: $t_sat"
        [ -n "$t_sun" ] && echo "sun: $t_sun"
    else
        week_totals="${t_mon} ${t_tue} ${t_wed} ${t_thu} ${t_fri} ${t_sat} ${t_sun}"
        week_seconds="$(total_time_spent "$week_totals")"
        sec_to_hm_inf "$week_seconds"
    fi
}

if [ -n "$4" ]; then
    case "$4" in
        total)
            # calculate total time spent for selected (day or week)
            if [ "$grep_week" ] || [ "$grep_iweek" ]; then
                total="$(total_week)"
                echo "$total"
            else
                total="$(total_slice "$slice")"
                echo "$total"
            fi
        ;;
    esac
    exit 0
fi

if [ -n "$slice" ]; then
    echo "$slice"
    exit 0
fi

$EDITOR "$fpath"
