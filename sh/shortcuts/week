#!/bin/sh
# shortcut - to edit last/previous or current week pomodoro file by default

case "$1" in
    last|prev|l|p) file="$(date -d 'last week' +'week-%V-%Y.txt')" ;;
    *) file="$(date +'week-%V-%Y.txt')" ;;
esac

PMDRD="${PMDRD:-"$HOME/Documents/Pomodoro"}"
fpath="$PMDRD/$file"

grep_day() { day="$(grep "^$1" "$fpath")" ;}

if [ -n "$2" ]; then
    case "$2" in
        # grep for today, yesterday and any day, week name
        [Tt]oday)           grep_day "$(date +%A)" ;;
        [Yy]esterday)       grep_day "$(date --date=yesterday +%A)" ;;
        [Mm]|[Mm]onday)     grep_day "Monday"    ;;
        [Tt]|[Tt]uesday)    grep_day "Tuesday"   ;;
        [Ww]|[Ww]ednesday)  grep_day "Wednesday" ;;
        [Tt]h|[Tt]hursday)  grep_day "Thursday"  ;;
        [Ff]|[Ff]riday)     grep_day "Friday"    ;;
        [Ss]a|[Ss]aturday)  grep_day "Saturday"  ;;
        [Ss]u|[Ss]unday)    grep_day "Sunday"    ;;
    esac
fi

hm_to_sec() { date --date="$1" +%s ;} # convert time to seconds
sec_diff() { echo "$(($1-$2))" ;} # subtract and return difference in seconds
sec_to_hm() { date --date="@$1" -u +%R ;} # convert seconds to HH:MM

total_time_spent() {
    # example usage: total_time_spent "01:00 00:01"
    # returns: sum in seconds
    EPOCH='jan 1 1970'; sum=0
    for i in $1; do # 1 specifically without double quotes!
      sum="$(date -u -d "$EPOCH $i" +%s) + $sum"
    done
    echo "$sum" | bc
}

if [ -n "$3" ]; then
    case "$3" in
        calc)
            hm="[[:digit:]][[:digit:]]:[[:digit:]][[:digit:]]"
            sep=" . " # sed regex for matching separator between (HH:MM . HH:MM)
            dgrep="$(echo "$day" | grep -o "${hm}.*${hm}")"
            old_sep="$(echo "$dgrep" | head -n1 | sed "s/.*\($sep\).*/\1/")"
            hm_pairs="$(echo "$dgrep" | sed "s/$sep/-/")"
            for line in $hm_pairs; do
                hm_fr="$(echo "$line" | cut -d- -f1)"
                hm_to="$(echo "$line" | cut -d- -f2)"
                sec_fr="$(hm_to_sec "$hm_fr")"
                sec_to="$(hm_to_sec "$hm_to")"
                seconds="$(sec_diff "$sec_to" "$sec_fr")"
                new="$(sec_to_hm "$seconds")"
                # replace the original time interval with the new calculated time spent
                day="$(echo "$day" | sed "s/${hm_fr}${old_sep}${hm_to}/$new/")"
            done
        ;;
    esac
fi

if [ -n "$3" ] && [ -z "$4" ]; then
    echo "$day"
    exit 0
fi

if [ -n "$4" ]; then
    case "$4" in
        total)
            # calculate total time spent for selected (day or week)
            spent_oneline="$(echo "$day" | awk '{print $3}' | tr '\n' ' ')"
            sec_total="$(total_time_spent "$spent_oneline")"
            total="$(sec_to_hm "$sec_total")"
            echo "$total"
        ;;
    esac
    exit 0
fi

if [ -n "$day" ]; then
    echo "$day"
    exit 0
fi

$EDITOR "$fpath"
