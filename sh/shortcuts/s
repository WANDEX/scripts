#!/bin/sh
# general way to use shortcuts
# shortcuts file structure: first column - alias, second column - "path"

red=$'\e[1;31m'; grn=$'\e[1;32m'; yel=$'\e[1;33m'; blu=$'\e[1;34m'; mag=$'\e[1;35m'; cyn=$'\e[1;36m'; end=$'\e[0m'

FILE="$CONF/shortcuts"
# remove everything after # character and empty lines with/without spaces
SHORTCUTS=$(cat "$FILE" | sed "s/[[:space:]]*#.*$//g; /^[[:space:]]*$/d")

# read into variable using 'Here Document' code block
read -d '' USAGE <<- EOF
Usage: $(basename $BASH_SOURCE) [OPTION...]
OPTIONS
    -e, --edit          Edit shortcuts file with \$EDITOR
    -h, --help          Display help
    -l, --list          Show list of all shortcuts
    -p, --pass-through  Print raw path as output
EOF

get_opt() {
    # Parse and read OPTIONS command-line options
    SHORT=ehlp
    LONG=edit,help,list,pass-through
    OPTIONS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    # PLACE FOR OPTION DEFAULTS
    eval set -- "$OPTIONS"
    while true; do
        case "$1" in
        -e|--edit)
            exec $EDITOR "$FILE"
            ;;
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -l|--list)
            echo "$SHORTCUTS"
            exit 0
            ;;
        -p|--pass-through)
            passthrough=1
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done
}

get_opt "$@"

[ ! -z "$1" ] && QUERY="--query='$1" # do exact match
MATCH=$(echo "$SHORTCUTS" | fzf -i --select-1 "${QUERY[@]}" | awk '{print $2}' | sed "s/[\"\']//g")
MATCH=$(echo "$MATCH" | envsubst)
if [[ $passthrough -eq 1 ]]; then
    echo "$MATCH"
else
    Q="as ${yel}f${end}ile / as ${yel}d${end}ir? [f/d] "
    while true; do
        read -p "$Q" -n 1 -r
        echo "" # move to a new line
        case "$REPLY" in
            [Ff]*) ff=1; break;;
            [Dd]*) dd=1; break;;
            *) echo "${red}I don't get it.${end}";;
        esac
    done
    if [[ $ff -eq 1 ]]; then
        if [[ -f "$MATCH" ]]; then
            echo "fm"
            Q="\$${yel}E${end}DITOR / \$${yel}P${end}AGER? [e/p] "
            read -p "$Q" -n 1 -r
            echo "" # move to a new line
            case "$REPLY" in
                [Ee]*) exec $EDITOR "$MATCH";;
                [Pp]*) exec $PAGER "$MATCH";;
                *) echo "${red}I don't get it.${end}";;
            esac
        else
            echo "[$MATCH] is not valid file. exit."
            exit 1
        fi
    elif [[ $dd -eq 1 ]]; then
        if [[ -f $MATCH ]]; then
            # remove file from end of the path
            MATCH=$(dirname "$MATCH")
        fi
        echo "$MATCH"
        if [[ -d $MATCH ]]; then
            Q="${yel}c${end}d/${yel}r${end}anger? [c/r] "
            read -p "$Q" -n 1 -r
            echo "" # move to a new line
            case "$REPLY" in
                [Cc]*) cd "$MATCH" && exec $SHELL;;
                [Rr]*) exec ranger "$MATCH";;
                *) echo "${red}I don't get it.${end}";;
            esac
        else
            echo "[$MATCH] is not valid dir. exit."
            exit 1
        fi
    fi
fi

