#!/bin/sh
# return path of the shortcut selected by the fzf as the output
# shortcuts file structure: first column - alias, second column - "path"

FILE="${XDG_CONFIG_HOME:-$HOME/.config}/shortcuts"
if [ ! -r "$FILE" ]; then
    printf "%s\n^%s\n" "$FILE" "shortcuts file not readable, exit."
    exit 2
fi

# remove everything after # character and empty lines with/without spaces
SHORTCUTS="$(sed "s/[[:space:]]*#.*$//g; /^[[:space:]]*$/d" "$FILE")"

USAGE=$(printf "%s" "\
Usage: $(basename "$0") [OPTION...] any amount of query args
OPTIONS
    -e, --edit          Edit shortcuts file with \$EDITOR
    -h, --help          Display help
    -l, --list          Show list of all shortcuts
    -q, --query         Only one query argument (overrides trailing query args)
    --exclude-dirs      Exclude paths with directories as last element - /
")

get_opt() {
    # Parse and read OPTIONS command-line options
    SHORT=ehlq:
    LONG=edit,help,list,query:,exclude-dirs
    OPTIONS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    # PLACE FOR OPTION DEFAULTS
    # shellcheck disable=SC2089 # Quotes/backslashes will be treated literally
    QOPT="--query='" # ' to do exact match
    eval set -- "$OPTIONS"
    while true; do
        case "$1" in
        -e|--edit)
            exec "$EDITOR" "$FILE"
            ;;
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -l|--list)
            echo "$SHORTCUTS"
            exit 0
            ;;
        -q|--query)
            shift
            # supports only one arg!
            QUERY="${QOPT}$1"
            ;;
        --exclude-dirs)
            SHORTCUTS="$(echo "$SHORTCUTS" | sed "/.*\/[\"']$/d")"
            ;;
        --)
            shift
            # do not override QUERY if was passed via option
            if [ -z "$QUERY" ] && [ -n "${*}" ]; then
                # support any amount of args after all other options!
                QUERY="${QOPT}${*}"
            fi
            break
            ;;
        esac
        shift
    done
}

get_opt "$@"

# fixes: even if QUERY variable is not defined fzf will complain about 'unknown option'
if [ -z "$QUERY" ]; then
    MATCH=$(echo "$SHORTCUTS" | fzf -i --select-1)
else
    MATCH=$(echo "$SHORTCUTS" | fzf -i --select-1 "$QUERY")
fi
[ -n "$MATCH" ] || exit 0 # handle cancel input

# get path & remove surrounding quotes if any
MATCH=$(echo "$MATCH" | awk '{print $2}' | sed "s/[\"\']//g")
# used to unpack env vars into the actual value (fixes: inaccessible paths errors etc.)
MATCH=$(echo "$MATCH" | envsubst)
echo "$MATCH"
