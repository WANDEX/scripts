#!/bin/sh
# NOTE: x264 --help

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 demo`: Record only screen (demo)
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen (quality)
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

updateicon() {
    echo "$1" > /tmp/recicon
    pkill -RTMIN+6 "${STATUSBAR:-dwmblocks}"
}

killrecording() {
    recpid="$(cat /tmp/recordingpid)"
    # kill with SIGTERM, allowing finishing touches.
    kill -15 "$recpid"
    rm -f /tmp/recordingpid
    updateicon ""
    pkill -RTMIN+6 "${STATUSBAR:-dwmblocks}"
    # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    sleep 3
    kill -9 "$recpid"
    exit
}

screencast() {
    ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s "1920x1080" \
    -i "$DISPLAY" \
    -f alsa -i default \
    -r 30 \
    -c:v h264 -crf 0 -preset ultrafast -c:a aac \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏èüéôÔ∏è"
}

video() { ffmpeg \
    -f x11grab -draw_mouse 0 \
    -s "1920x1080" \
    -i "$DISPLAY" \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üî¥ VIDEO"
}

demo() {
    ffmpeg \
    -probesize 42M \
    -f x11grab -draw_mouse 0 \
    -s "1920x1080" \
    -i "$DISPLAY" \
    -pix_fmt yuv420p -max_muxing_queue_size 4096 -color_primaries 1 -color_trc 1 -colorspace 1 \
    -c:v libx264 -profile:v baseline -preset medium -crf 28 \
    -r 10 \
    "$HOME/demo-$(date '+%y%m%d-%H%M%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "üî¥ DEMO"
}

area() {
    ## proper order of usage: -video_size %wx%h -i +%x,%y
    ## $(slop -D -f "-video_size %wx%h -i +%x,%y") \
    ssarea=$(slop -D -f "+%x,%y;%wx%h")
    [ -z "$ssarea" ] && exit 0 # screen selection area was canceled
    ssarea_xy=$(printf "%s" "$ssarea" | cut -d ';' -f1) # coords of the starting point on the screen
    ssarea_wh=$(printf "%s" "$ssarea" | cut -d ';' -f2) # selection area: WIDTHxHEIGHT
    ffmpeg -y \
    -probesize 42M \
    -f x11grab -draw_mouse 1 \
    -video_size "$ssarea_wh" -i "$ssarea_xy" \
    -r 10 \
    "$HOME/area-$(date '+%y%m%d-%H%M%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "üî¥ AREA"
}

# result res: 854x480
rs() {
    ffmpeg -y \
    -f x11grab \
    -video_size 1866x1050 \
    -i "${DISPLAY}+24,22" \
    -f alsa -i default \
    -vf scale=-2:480,fps=24 -pix_fmt yuv420p -max_muxing_queue_size 4096 \
    -color_primaries 1 -color_trc 1 -colorspace 1 \
    -c:v libx264 -profile:v baseline -preset medium -crf 28 \
    -ac 2 -c:a aac -ar 48000 \
    "$HOME/Films/.mpv_encode/rs/_rs-$(date '+%y%m%d-%H%M%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "üî¥ RS"
}

webcamhidef() {
    ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
}

webcam() {
    ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
}


audio() {
    ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
    echo $! > /tmp/recordingpid
    updateicon "üéôÔ∏è"
}

askrecording() {
    choice=$(printf "area\\nrs\\ndemo\\nscreencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
    case "$choice" in
        area) area;;
        rs) rs;;
        demo) demo;;
        screencast) screencast;;
        audio) audio;;
        video) video;;
        webcam) webcam;;
        "webcam (hi-def)") webcamhidef;;
    esac
}

asktoend() {
    response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] &&  killrecording
}


case "$1" in
    area) area;;
    rs) rs;;
    demo) demo;;
    screencast) screencast;;
    audio) audio;;
    video) video;;
    kill) killrecording;;
    *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac

