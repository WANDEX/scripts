#!/bin/sh
# search locally and open python doc man page in $MANPAGER
CACHE_DIR="$HOME"'/.cache/man/python/'
UPDATE="$CACHE_DIR"'update_cache'
K_FILE="$CACHE_DIR"'keywords'
M_FILE="$CACHE_DIR"'modules'
T_FILE="$CACHE_DIR"'topics'
A_FILE="$CACHE_DIR"'all'

init() {
    mkdir -p "$CACHE_DIR"
    [ ! -f "$UPDATE" ] && touch "$UPDATE" # create menu item for update_cache method
}

update_cache() {
    python -m pydoc keywords | tail -n +3 | cut -d' ' -f1- --output-delimiter=$'\n' | awk NF | sort > "$K_FILE" &
    python -m pydoc modules | tail -n +3 | cut -d' ' -f1- --output-delimiter=$'\n' | awk NF | sort > "$M_FILE" &
    python -m pydoc topics | tail -n +3 | cut -d' ' -f1- --output-delimiter=$'\n' | awk NF | sort > "$T_FILE" &
    wait
    ls "$CACHE_DIR"* | grep -vw 'all' | xargs -r cat > "$A_FILE"
}

interactive() {
    # first arg
    items=$(ls -l "$CACHE_DIR" | awk '{print $9}' | awk NF)
    item=$(echo "$items" | dmenu -p 'enter item to subsearch:' -l 30)
    # substring
    case "$item" in
        "update_cache")
            update_cache
            return 8 # return from function, to run it, after update_cache
        ;;
        "keywords")
            cache=$(cat "$K_FILE")
        ;;
        "modules")
            cache=$(cat "$M_FILE")
        ;;
        "topics")
            cache=$(cat "$T_FILE")
        ;;
        "all")
            cache=$(cat "$A_FILE")
        ;;
        *)
            exit 0
        ;;
    esac >/dev/null
    if [ -t 0 ]; then
        echo "$cache" | dmenu -i -p 'enter man page name: ' -l 30 | xargs -r -o python -m pydoc
    else
        echo "$cache" | dmenu -i -p 'enter man page name: ' -l 30 | xargs -r $TERMINAL -e python -m pydoc
    fi
}

main() {
    init
    interactive
    [ "$?" -eq 8 ] && interactive # in case the update_cache was selected
}

main "$@"
