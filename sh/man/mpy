#!/bin/sh
# search locally and open python doc man page in $MANPAGER

CACHE_DIR="$HOME/.cache/man/python"
[ -d "$CACHE_DIR" ] || mkdir -p "$CACHE_DIR"

K_FILE="$CACHE_DIR/keywords"
M_FILE="$CACHE_DIR/modules"
T_FILE="$CACHE_DIR/topics"
A_FILE="$CACHE_DIR/all"

NL='
' # New Line (POSIX)

prf() {
    if [ -z "$1" ] || [ -z "$2" ]; then
        exit 4 # not enough args
    fi
    echo "$1" | tail -n +3 | cut -d' ' -f1- --output-delimiter="$NL" | awk NF | sort > "$2"
}

update_cache() {
    prf "$(python -m pydoc keywords)" "$K_FILE" &
    prf "$(python -m pydoc modules )" "$M_FILE" &
    prf "$(python -m pydoc topics  )" "$T_FILE" &
    wait
    # -print0 & -0 is for shellcheck (SC2038)
    find "$CACHE_DIR" -type f \( ! -name all \) -print0 | xargs -0 -r cat > "$A_FILE"
}

run() {
    items=$(find "$CACHE_DIR" -type f -printf "%f\n")
    item=$(printf "%s\n%s\n" "$items" "update_cache" | dmenu -p 'enter item to subsearch:' -l 30)
    [ -n "$item" ] || exit 0
    case "$item" in
        "update_cache")
            # run again after cache is updated
            update_cache
            run
            return 0 # essential
        ;;
        "keywords")
            category=$(cat "$K_FILE")
        ;;
        "modules")
            category=$(cat "$M_FILE")
        ;;
        "topics")
            category=$(cat "$T_FILE")
        ;;
        "all")
            category=$(cat "$A_FILE")
        ;;
        *)
            exit 0
        ;;
    esac >/dev/null
    man_page=$(echo "$category" | dmenu -i -p 'enter man page name: ' -l 30)
    [ -n "$man_page" ] || exit 0 # handle cancel
}

run

if [ -t 0 ]; then
    # execute in current $TERMINAL (already spawned)
    exec python -m pydoc "$man_page"
else
    # spawn $TERMINAL and execute (works with dmenu)
    exec "$TERMINAL" -e python -m pydoc "$man_page"
fi
