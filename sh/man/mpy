#!/bin/sh
# search locally and open python doc man page in $MANPAGER

CACHE_DIR="$HOME/.cache/man/python"
[ -d "$CACHE_DIR" ] || mkdir -p "$CACHE_DIR"

K_FILE="$CACHE_DIR/keywords"
M_FILE="$CACHE_DIR/modules"
T_FILE="$CACHE_DIR/topics"
A_FILE="$CACHE_DIR/all"

prf() {
    if [ -z "$1" ] || [ -z "$2" ]; then
        echo "not enough args"
        exit 4
    fi
    echo "$1" | tail -n +3 | cut -d' ' -f1- --output-delimiter=$'\n' | awk NF | sort > "$2"
}

update_cache() {
    prf "$(python -m pydoc keywords)" "$K_FILE" &
    prf "$(python -m pydoc modules )" "$M_FILE" &
    prf "$(python -m pydoc topics  )" "$T_FILE" &
    wait
    find "$CACHE_DIR" -type f \( ! -name all \) | xargs -r cat > "$A_FILE"
}

run() {
    items="$(find "$CACHE_DIR" -type f -printf "%f\n")"
    item="$(printf "%s\n%s\n" "$items" "update_cache" | dmenu -p 'enter item to subsearch:' -l 30)"
    [ -z "$item" ] && exit 0
    case "$item" in
        "update_cache")
            # run again after cache is updated
            update_cache
            run
            return 0 # essential
        ;;
        "keywords")
            cache="$(cat "$K_FILE")"
        ;;
        "modules")
            cache="$(cat "$M_FILE")"
        ;;
        "topics")
            cache="$(cat "$T_FILE")"
        ;;
        "all")
            cache="$(cat "$A_FILE")"
        ;;
        *)
            exit 0
        ;;
    esac >/dev/null
    if [ -t 0 ]; then
        echo "$cache" | dmenu -i -p 'enter man page name: ' -l 30 | xargs -r -o python -m pydoc
    else
        echo "$cache" | dmenu -i -p 'enter man page name: ' -l 30 | xargs -r $TERMINAL -e python -m pydoc
    fi
}

run
