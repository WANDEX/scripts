#!/bin/bash
# advanced wallpaper setter
# with support of 'magick convert' options without modifying original image

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"$HOME/.config"}"
XDG_CACHE_HOME="${XDG_CACHE_HOME:-"$HOME/.cache"}"

CSCRDIR="${CSCRDIR:-"$XDG_CACHE_HOME/cscripts"}"
[ ! -d "$CSCRDIR" ] && mkdir -p "$CSCRDIR"

DEST_PATH="$XDG_CONFIG_HOME/wallpaper.jpg"
CACHE="$CSCRDIR/setbg"

# get options saved in cache
C_MCT=$(awk 'NR==1' "$CACHE" | grep -o "[01]")
C_XARGS=$(sed -n "/(/,/)/p" "$CACHE" | sed '1d;$d')
C_MARGS=$(sed -n "/{/,/}/p" "$CACHE" | sed '1d;$d')

ST_S="string:x-dunst-stack-tag:setbg"
ST_H="string:x-dunst-stack-tag:hi" # history_ignore

bname="$(basename "$0")"
USAGE=$(printf "%s" "\
Usage: $bname [OPTION...]
OPTIONS
    -c, --clear-margs       Clear magick convert arguments
    -h, --help              Display help
    -i, --image             Provide wallpaper image
    -m, --margs             Use 'magick convert' arguments specified 'inside single quotes'
    -x, --xargs             Set 'xwallpaper' options
    --mct                   Toggle combining of magick convert options and exit
    --outint                Set output name by num from '1' to 'N' connected outputs
    --outname               Set output name with grep -i like 'VGA', first found if many
    --startup               Set default wallpaper image and exit without magick
EXAMPLES
    $bname -i ./image.jpg -x '--maximize' --margs='-colorspace Gray'
")

at_path() { hash "$1" >/dev/null 2>&1 ;} # if $1 is found at $PATH -> return 0

get_opt() {
    # Parse and read OPTIONS command-line options
    SHORT=chi:m:x:
    LONG=clear-margs,help,image:,margs:,xargs:,mct,outint:,outname:,startup
    OPTIONS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    # PLACE FOR OPTION DEFAULTS
    # get xwallpaper & 'magick convert' args from cache
    IFS=" " read -r -a xargs_array <<< "$C_XARGS"
    IFS=" " read -r -a margs_array <<< "$C_MARGS"
    [ -z "${xargs_array[*]}" ] && xargs_array=( --zoom )
    MCT=${C_MCT:-0}
    output='all'
    # decide which image file to work with (--image option override this)
    [ -e "$DEST_PATH" ] && image="$DEST_PATH" # get default image if file exist
    eval set -- "$OPTIONS"
    while true; do
        case "$1" in
        -c|--clear-margs)
            margs_array=()
            ;;
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -i|--image)
            shift
            image="$1"
            ;;
        -m|--margs)
            shift
            if [ "$MCT" -eq 1 ]; then
                IFS=" " read -r -a margs_array <<< "${margs_array[*]} $1"
            else
                IFS=" " read -r -a margs_array <<< "$1"
            fi
            ;;
        -x|--xargs)
            shift
            IFS=" " read -r -a xargs_array <<< "$1"
            ;;
        --mct)
            [ "$MCT" -eq 1 ] && MCT=0 || MCT=1 # toggle behavior of value
            COMBINE_TOGGLED=1 # flag -> basically check if this variable defined
            if at_path dunstify; then
                dunstify -u low -h "$ST_S" -h "$ST_H" "[setbg] MCT=$MCT" ""
            fi
            ;;
        --outint)
            shift
            output=$(xrandr -q | grep -i ' connected' | awk '{print $1}' | awk 'NR=='"$1")
            ;;
        --outname)
            shift
            output=$(xrandr -q | grep -i ' connected' | awk '{print $1}' | grep -i "$1" | awk 'NR==1')
            ;;
        --startup)
            if at_path xwallpaper; then
                xwallpaper --output "$output" "${xargs_array[@]}" "$DEST_PATH"
            else
                echo "xwallpaper not found at path!"
                exit 1
            fi
            exit 0
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done
}

get_opt "$@"

cache=$(printf "%s" "\
$MCT
(
${xargs_array[*]}
)
{
${margs_array[*]}
}
")

echo "$cache" > "$CACHE" # write to cache
[ "$COMBINE_TOGGLED" ] && exit 0

# image magick convert ($ magick -list tool)
if at_path magick && [ -n "${margs_array[*]}" ]; then
    magick convert "$image" "${margs_array[@]}" "$DEST_PATH"
    if at_path dunstify; then
        dunstify -u low -h "$ST_S" -h "$ST_H" "[setbg] MCT=$MCT margs:" "\n${margs_array[*]}\n"
    else
        printf "MCT=$MCT magick convert (args):\n%s\n" "${margs_array[*]}"
    fi
elif [ -n "$image" ]; then
    cp "$image" "$DEST_PATH"
fi

if at_path xwallpaper; then
    xwallpaper --output "$output" "${xargs_array[@]}" "$DEST_PATH"
else
    echo "xwallpaper not found at path!"
    exit 1
fi
