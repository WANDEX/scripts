#!/bin/sh
DEST_PATH="$HOME/.config/wallpaper.jpg"
CACHE="$CSCRDIR/setbg"
C_MCT=$(cat "$CACHE" | awk 'NR==1' | grep -o "[01]") # get MCT flag from cache
C_XARGS=$(sed -n "/(/,/)/p" "$CACHE" | sed '1d;$d')
C_MARGS=$(sed -n "/{/,/}/p" "$CACHE" | sed '1d;$d')
ST_S="string:x-dunst-stack-tag:setbg"
ST_H="string:x-dunst-stack-tag:hi" # history_ignore

# read into variable using 'Here Document' code block
read -d '' USAGE <<- EOF
Usage: $(basename $BASH_SOURCE) [OPTION...]
OPTIONS
    -c, --clear-margs       Clear magick convert arguments
    -h, --help              Display help
    -i, --image             Provide wallpaper image
    -m, --margs             Use 'magick convert' arguments specified 'inside single quotes'
    -x, --xargs             Set 'xwallpaper' options
    --magic-combine-toggle  Toggle combining of magic convert options and exit
    --outint                Set output name by num from '1' to 'N' connected outputs
    --outname               Set output name with grep -i like 'VGA', first found if many
    --startup               Set default wallpaper image and exit without magick
EXAMPLES
    $(basename $BASH_SOURCE) -i image.jpg -x '--maximize' --margs='-colorspace Gray'
    # and to clear margs cache
    $(basename $BASH_SOURCE) -i image.jpg --margs=''
EOF

get_opt() {
    # Parse and read OPTIONS command-line options
    SHORT=chi:m:x:
    LONG=clear-margs,help,image:,margs:,xargs:,magic-combine-toggle,outint:,outname:,startup
    OPTIONS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    # PLACE FOR OPTION DEFAULTS
    xargs_array=(${C_XARGS}); [ -z "$xargs_array" ] && xargs_array=('--zoom') # if C_XARGS empty
    margs_array=(${C_MARGS}) # get 'magick convert' args from cache
    MCT=${C_MCT:-0}
    output='all'
    # decide which image file to work with (--image option override this)
    if [ "$#" -gt 0 ]; then
        image="${*: -1}" # get last element from arguments
    elif test ! -t 0; then
        image=$(cat) # /dev/stdin pipe used usually
        [ ! -e "$image" ] && echo "file taken from -in, does not exist. exit." && exit 1
    else
        [ -f "$DEST_PATH" ] && image="$DEST_PATH" # get default image if file exist
    fi
    eval set -- "$OPTIONS"
    while true; do
        case "$1" in
        -c|--clear-margs)
            margs_array=()
            ;;
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -i|--image)
            shift
            image="$1"
            ;;
        -m|--margs)
            shift
            if [ "$MCT" -eq 1 ]; then
                margs_array=( ${margs_array[@]} $1)
            else
                margs_array=($1)
            fi
            ;;
        -x|--xargs)
            shift
            xargs_array=($1)
            ;;
        --magic-combine-toggle)
            [ "$MCT" -eq 1 ] && MCT=0 || MCT=1 # toggle behavior of value
            COMBINE_TOGGLED=1 # flag -> basically check if this variable defined
            dunstify -u low -h "$ST_S" -h "$ST_H" "[setbg] MCT=$MCT" ""
            ;;
        --outint)
            shift
            output=$(xrandr -q | grep -i ' connected' | awk '{print $1}' | awk 'NR=='"$1")
            ;;
        --outname)
            shift
            output=$(xrandr -q | grep -i ' connected' | awk '{print $1}' | grep -i "$1" | awk 'NR==1')
            ;;
        --startup)
            xwallpaper --output "$output" "${xargs_array[@]}" "$DEST_PATH"
            exit 0
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done
}

get_opt "$@"

read -d '' cache <<- EOF
$MCT
(
${xargs_array[@]}
)
{
${margs_array[@]}
}
EOF

echo "$cache" > "$CACHE" # write to cache
[ "$COMBINE_TOGGLED" ] && exit 0

if [ -n "${margs_array[*]}" ]; then
    printf "magick convert (args):\n%s\n" "${margs_array[*]}"
    dunstify -u low -h "$ST_S" -h "$ST_H" "[setbg] MCT=$MCT margs:" "\n${margs_array[*]}\n"
    magick convert "$image" "${margs_array[@]}" "$DEST_PATH"
elif [ -n "$image" ]; then
    cp "$image" "$DEST_PATH"
fi
wait

xwallpaper --output "$output" "${xargs_array[@]}" "$DEST_PATH"
