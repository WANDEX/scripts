#!/bin/bash
# advanced wallpaper setter
# with support of 'magick convert' options without modifying original image

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"$HOME/.config"}"
XDG_CACHE_HOME="${XDG_CACHE_HOME:-"$HOME/.cache"}"

CSCRDIR="${CSCRDIR:-"$XDG_CACHE_HOME/cscripts"}"
[ ! -d "$CSCRDIR" ] && mkdir -p "$CSCRDIR"

DEST_PATH="$XDG_CONFIG_HOME/wallpaper.jpg"
CACHE="$CSCRDIR/setbg"

# get options saved in cache
C_MCT=$(awk 'NR==1' "$CACHE" | grep -o "[01]")
C_XARGS=$(sed -n "/(/,/)/p" "$CACHE" | sed '1d;$d')
C_MARGS=$(sed -n "/{/,/}/p" "$CACHE" | sed '1d;$d')
PRESETS=$(sed -n "/\[/,/\]/p" "$CACHE" | sed '1d;$d')

ST_S="string:x-dunst-stack-tag:setbg"
ST_H="string:x-dunst-stack-tag:hi" # history_ignore

PIPE=""
# support path to the image file from pipe (only first line if many)
[ -t 0 ] || PIPE=$(cat | head -n1)
# dismiss not valid input from pipe
# clear PIPE variable if file does not exist
[ -f "$PIPE" ] || PIPE=""

bname="$(basename "$0")"
USAGE=$(printf "%s" "\
Usage: $bname [OPTION...]
OPTIONS
    -c, --clear-margs   Clear magick convert arguments
    -e, --edit          Edit cache file with \$EDITOR
    -h, --help          Display help
    -i, --image         Provide wallpaper image
    -m, --margs         Use 'magick convert' arguments specified 'inside single quotes'
    -x, --xargs         Set 'xwallpaper' options
    --mct               Toggle combining of magick convert options and exit
    --outint            Set output name by num from '1' to 'N' connected outputs
    --outname           Set output name with grep -i like 'VGA', first found if many
    --preset            Interactively select preset (magick convert options)
                        (0 - set, 1 - append, -1 - oneshot without modifying cached margs)
    --save              Save current preset
    --startup           Set default wallpaper image and exit without magick
EXAMPLES
    $bname -i ./image.jpg -x '--maximize' --margs='-colorspace Gray'
    echo random_image_path | $bname
")

at_path() { hash "$1" >/dev/null 2>&1 ;} # if $1 is found at $PATH -> return 0

get_opt() {
    # Parse and read OPTIONS command-line options
    SHORT=cehi:m:x:
    LONG=clear-margs,edit,help,image:,margs:,xargs:,mct,outint:,outname:,preset:,save,startup
    OPTIONS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    # PLACE FOR OPTION DEFAULTS
    # get xwallpaper & 'magick convert' args from cache
    IFS=' ' read -r -a xargs_array <<< "$C_XARGS"
    IFS=' ' read -r -a margs_array <<< "$C_MARGS"
    [ -z "${xargs_array[*]}" ] && xargs_array=( --zoom )
    MCT=${C_MCT:-0}
    output='all'
    # decide which image file to work with (--image option override this)
    [ -e "$DEST_PATH" ] && image="$DEST_PATH" # get default image if file exist
    image="${PIPE:-"$image"}" # support path to the image file from pipe
    eval set -- "$OPTIONS"
    while true; do
        case "$1" in
        -c|--clear-margs)
            margs_array=()
            ;;
        -e|--edit)
            always_fork=1
            if [ "$always_fork" -eq 1 ] && at_path setsid; then
                setsid -f "$TERMINAL" "$EDITOR" "$CACHE"
            else
                "$EDITOR" "$CACHE"
            fi
            exit 0
            ;;
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -i|--image)
            shift
            image="$1"
            ;;
        -m|--margs)
            shift
            if [ "$MCT" -eq 1 ]; then
                IFS=' ' read -r -a margs_array <<< "${margs_array[*]} $1"
            else
                IFS=' ' read -r -a margs_array <<< "$1"
            fi
            ;;
        -x|--xargs)
            shift
            IFS=' ' read -r -a xargs_array <<< "$1"
            ;;
        --mct)
            [ "$MCT" -eq 1 ] && MCT=0 || MCT=1 # toggle behavior of value
            COMBINE_TOGGLED=1 # flag -> basically check if this variable defined
            if at_path dunstify; then
                dunstify -u low -h "$ST_S" -h "$ST_H" "[setbg] MCT=$MCT" ""
            fi
            ;;
        --outint)
            shift
            output=$(xrandr -q | grep -i ' connected' | awk '{print $1}' | awk 'NR=='"$1")
            ;;
        --outname)
            shift
            output=$(xrandr -q | grep -i ' connected' | awk '{print $1}' | grep -i "$1" | awk 'NR==1')
            ;;
        --preset)
            shift
            if at_path dmenu; then
                preset="$(echo "$PRESETS" | dmenu -p "preset:" -i -l 50)"
                # remove | chars from string => can be used to pass unique options
                preset="${preset//|/}"
                [ -z "$preset" ] && exit 2 # select was canceled
                if [ "$1" -lt 0 ]; then
                    IFS=' ' read -r -a margs_oneshot <<< "$preset"
                elif [ "$1" -gt 0 ]; then
                    IFS=' ' read -r -a margs_array <<< "${margs_array[*]} $preset"
                else
                    IFS=' ' read -r -a margs_array <<< "$preset"
                fi
            else
                echo "dmenu not found at path!"
                exit 1
            fi
            ;;
        --save)
            if [ -z "$PRESETS" ]; then
                PRESETS="${margs_array[*]}"
            else
                PRESETS="$(printf "%s\n%s\n" "$PRESETS" "${margs_array[*]}")"
            fi
            ;;
        --startup)
            if at_path xwallpaper; then
                xwallpaper --output "$output" "${xargs_array[@]}" "$DEST_PATH"
            else
                echo "xwallpaper not found at path!"
                exit 1
            fi
            exit 0
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done
}

get_opt "$@"

cache=$(printf "%s" "\
$MCT
(
${xargs_array[*]}
)
{
${margs_array[*]}
}
[
$PRESETS
]
")

echo "$cache" > "$CACHE" # write to cache
[ "$COMBINE_TOGGLED" ] && exit 0

if [ -n "${margs_oneshot[*]}" ]; then
    MCA=("${margs_oneshot[@]}")
else
    MCA=("${margs_array[@]}")
fi

# image magick convert ($ magick -list tool)
if at_path magick && [ -n "${MCA[*]}" ]; then
    magick convert "$image" "${MCA[@]}" "$DEST_PATH"
    if at_path dunstify; then
        dunstify -u low -h "$ST_S" -h "$ST_H" "[setbg] MCT=$MCT MCA:" "\n${MCA[*]}\n"
    else
        printf "MCT=$MCT MCA:\n%s\n" "${MCA[*]}"
    fi
elif [ -n "$image" ] && [ "$image" != "$DEST_PATH" ]; then
    cp "$image" "$DEST_PATH"
fi

if at_path xwallpaper; then
    xwallpaper --output "$output" "${xargs_array[@]}" "$DEST_PATH"
else
    echo "xwallpaper not found at path!"
    exit 1
fi
